---
version: '3'

networks:
  docker_kafka:
   name: docker_kafka

services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - docker_kafka
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka
    hostname: broker
    container_name: broker
    networks:
      - docker_kafka
    ports:
      - 9092:9092
      - 29092:29092
    depends_on:
      - zookeeper
    restart: always
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: INTERNAL://broker:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: kafka-topics --bootstrap-server broker:29092 --list
      interval: 45s
      timeout: 10s
      retries: 8

  rss_scraper:
     image: ghcr.io/oth-datapipeline/scraping-scripts:develop
     hostname: rss_scraper
     container_name: rss_scraper
     networks:
      - docker_kafka
     volumes: 
      - ../producers/logs:/producers/logs
     depends_on:
       broker:
        condition: service_healthy
     env_file:
      - .env
     entrypoint:
      - bash
      - -c
      - |
        echo "[$$(date +'%Y-%m-%d %T')] Executing scraper for rss."
        python3 src/data_collection.py --config=config.json "rss" --base_url=https://blog.feedspot.com/world_news_rss_feeds/

  reddit_scraper:
     image: ghcr.io/oth-datapipeline/scraping-scripts:develop
     hostname: reddit_scraper
     container_name: reddit_scraper
     networks:
      - docker_kafka
     volumes: 
      - ../producers/logs:/producers/logs
     depends_on:
       broker:
        condition: service_healthy
     env_file:
      - .env
     entrypoint:
      - bash
      - -c
      - |
        echo "[$$(date +'%Y-%m-%d %T')] Executing scraper for reddit."
        python3 src/data_collection.py --config=config.json "reddit"

  twitter_scraper:
     image: ghcr.io/oth-datapipeline/scraping-scripts:develop
     hostname: twitter_scraper
     container_name: twitter_scraper
     networks:
      - docker_kafka
     volumes: 
      - ../producers/logs:/producers/logs
     depends_on:
       broker:
        condition: service_healthy
     env_file:
      - .env
     entrypoint:
      - bash
      - -c
      - |
        echo "[$$(date +'%Y-%m-%d %T')] Executing scraper for twitter."
        python3 src/data_collection.py --config=config.json "twitter"

  rss_ingestion:
     image: ghcr.io/oth-datapipeline/ingestion-scripts:develop
     hostname: rss_ingestion
     container_name: rss_ingestion
     networks:
      - docker_kafka
     volumes: 
      - ../consumers/logs:/consumers/logs
     depends_on:
       broker:
        condition: service_healthy
     restart: always
     env_file:
      - .env
     entrypoint:
      - bash
      - -c
      - |
        echo "[$$(date +'%Y-%m-%d %T')] Starting RSS ingestion pipeline."
        cd src/
        python3 -m faust -A rss_consumer worker -l info

  reddit_ingestion:
     image: ghcr.io/oth-datapipeline/ingestion-scripts:develop
     hostname: reddit_ingestion
     container_name: reddit_ingestion
     networks:
      - docker_kafka
     volumes: 
      - ../consumers/logs:/consumers/logs
     depends_on:
       broker:
        condition: service_healthy
     restart: always
     env_file:
      - .env
     entrypoint:
      - bash
      - -c
      - |
        echo "[$$(date +'%Y-%m-%d %T')] Starting Reddit ingestion pipeline."
        cd src/
        python3 -m faust -A reddit_consumer worker -l info

  twitter_ingestion:
     image: ghcr.io/oth-datapipeline/ingestion-scripts:develop
     hostname: twitter_ingestion
     container_name: twitter_ingestion
     networks:
      - docker_kafka
     volumes: 
      - ../consumers/logs:/consumers/logs
     depends_on:
       broker:
        condition: service_healthy
     restart: always
     env_file:
      - .env
     entrypoint:
      - bash
      - -c
      - |
        echo "[$$(date +'%Y-%m-%d %T')] Starting Twitter ingestion pipeline."
        cd src/
        python3 -m faust -A twitter_consumer worker -l info

  mongo:
    image: mongo:4.4.13
    container_name: mongo
    hostname: mongo
    restart: always
    ports:
      - 27017:27017
    networks:
     - docker_kafka
    # Mounting volume to save data on host machine
    volumes:
     - ../mongodb/data:/data/db
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    hostname: mongo_express
    restart: always
    depends_on:
     mongo:
       condition: service_healthy
    ports:
      - 8081:8081
    networks:
     - docker_kafka
    env_file:
      - .env

  analysis:
    image: ghcr.io/oth-datapipeline/analysis:develop
    container_name: analysis
    hostname: analysis
    restart: always
    depends_on:
     mongo:
       condition: service_healthy
     broker:
       condition: service_healthy
    ports:
      - 8501:8501
    networks:
     - docker_kafka
    env_file:
      - .env

